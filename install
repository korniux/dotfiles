#!/usr/bin/env python3

import os
import platform
import subprocess
import pathlib
from shutil import which, copyfile
from difflib import Differ
from pprint import pprint

PWD = os.getcwd()
PLATFORM = platform.system()
VERSION = "3.1"
HOME = os.path.expanduser('~')
ROWS, COLS = os.popen('stty size', 'r').read().split()

print(r"""
____   __
\   | |  |           __ 
 |  | |  |__     ___|  |
 |  |/  / \  \  /  / \| 
 |  |\  \  \  \/  /     
 |  | |  | /  /\  \     
 |  | |__|/__/  \__\    
  \ |
   \| Dotfiles installer v{}
""".format(VERSION))

def brew(package):
  if package and not which(package):
    print("brew: installing {}...".format(package))
    subprocess.run(["brew", "install", package])
  else:
    print("brew: {} is already installed".format(package))

def yay(package):
  if package and not which(package):
    print("yay: installing {}...".format(package))
    subprocess.run(["yay", "--noconfirm", "-S", package])
  else:
    print("yay: {} is already installed".format(package))

def installVim(pm):
  libs = [
    "https://github.com/itchyny/lightline.vim.git",
    "https://github.com/itchyny/vim-gitbranch.git",
  ]
  pm("vim")
  if not os.path.exists("{}/.vim/autoload".format(HOME)):
    print("installVim: installing pathogen...")
    pathlib.Path("{}/.vim/autoload".format(HOME)).mkdir(parents=True, exist_ok=True)
    pathlib.Path("{}/.vim/bundle".format(HOME)).mkdir(parents=True, exist_ok=True)
  else:
    os.chdir("{}/.vim/bundle".format(HOME))
    for lib in libs:
      print("installVim: installing {}...".format(lib))
      subprocess.run(["git", "clone", lib])
    os.chdir(PWD)
  copyfile('.vimrc', '{}/.vimrc'.format(HOME))

def installZsh(pm):
  pm("zsh")


def darwinActions():
  if not which("brew"):
    print("darwinActions: brew is not detected, installing...")
    subprocess.run([which("bash"), "-c", "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"])
  else:
    print("darwinActions: brew is already installed")
    installZsh(brew)
    installVim(brew)

def linuxActions():


if __name__ == "__main__":
  if PLATFORM == 'Darwin':
    darwinActions()
  else:
    linuxActions()
